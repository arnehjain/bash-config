#!/usr/bin/env bash
# dsync is a usefull rsync wrapper which can be used synchronize directories across different servers.
function usage {
    echo -e "dsync"
    echo -e
    echo -e "A rsync wrapper which works on matching directory trees between two servers."
    echo -e
    echo -e "Usage:"
    echo -e "dsync pull [USER@]HOST [--remote <remote_path>] [--local <local_path>] [--port <ssh_port>]"
    echo -e "dsync push [USER@]HOST [--remote <remote_path>] [--local <local_path>] [--port <ssh_port>]"
    echo -e
    echo -e "Where:"
    echo -e "HOST                   : The remote host."
    echo -e "USER (optional)        : The remote username. (defaults to the local username)"
    echo -e "REMOTE_PATH (optional) : The remote directory path. (defaults to local cwd)"
}

# Check if valid bash version
if [ -z "${BASH_VERSINFO}" ] || [ -z "${BASH_VERSINFO[0]}" ] || [ ${BASH_VERSINFO[0]} -lt 4 ]; then
    echo -e "The current bash version is ${BASH_VERSION}"
    echo "You need a bash version >= 4 to run this script."
    exit 1
fi


MODE=$1
if [[ ! ${MODE} =~ ^(pull|push) ]]; then
    usage
    echo -e
    echo -e "Invalid mode: $1"
    exit 1
fi
shift

URL=$1
if [[ -z "${URL}" || ( ! ${URL} =~ ^[a-z0-9_-]*$ && ! ${URL} =~ ^[a-z0-9]*@[a-z0-9_-]*$ ) ]]; then
    echo -e "Inavlid [USER@]HOST"
    exit 1
fi
if [[ ! ${URL} =~ @ ]]; then
    # URL does not specify username.
    # Use the current user
    URL="$(id -un)@${URL}"
fi
shift

LOCAL_PATH="$(pwd)"
REMOTE_PATH="$(pwd)"
PORT=
while [[ $# -gt 0 ]]
do
    key="$1"
    case "$key" in
        --remote)
            REMOTE_PATH="$2"
            shift
            ;;
        --local)
            LOCAL_PATH="$2"
            shift
            ;;
        --port)
            PORT="$2"
            shift
            ;;
        *)
            usage
            echo -e
            echo -e "Inavlid argument : ${key}"
            exit 1
            ;;
    esac
    shift
done

COMMAND="rsync -r"
if [[ ! -z "${PORT}" ]]; then
    COMMAND="${COMMAND} -e 'ssh -p ${PORT}'"
fi

if [[ ${MODE} == "push" ]]; then
    COMMAND="${COMMAND} ${LOCAL_PATH}/ ${URL}:${REMOTE_PATH}"
elif [[ ${MODE} == "pull" ]]; then
    COMMAND="${COMMAND} ${URL}:${REMOTE_PATH}/ ${LOCAL_PATH}"
fi
echo -e "Running:"
echo -e ${COMMAND}
${COMMAND}